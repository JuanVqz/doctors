name: build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Set Timezone
        run: sudo timedatectl set-timezone America/Mexico_City

      - name: Checkout repository
        uses: actions/checkout@v2

      # - name: Setup chrome driver
      #   uses: nanasess/setup-chromedriver@master
      # - run: |
      #     export DISPLAY=:99
      #     chromedriver --url-base=/wd/hub &
      #     sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

      - name: Set up Ruby 2.7
        uses: ruby/setup-ruby@v1

      - name: Cache Ruby gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle config set without "production development"
          bundle config --local build.sassc --disable-march-tune-native
          bundle install --jobs 4 --retry 3

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node modules
        run: yarn install --frozen-lockfile

      - name: Setup Database
        run: |
          cp config/database_ci.yml config/database.yml
          bundle exec rake db:create
          bundle exec rake db:schema:load
        env:
          DB_HOST: localhost
          DB_USER: postgres
          DB_PASSWORD: postgres
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Run Requests Tests
        if: always()
        run: bundle exec rake spec/requests
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test

      - name: Run Models Tests
        if: always()
        run: bundle exec rake spec/models
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test

      - name: Run Policies Tests
        if: always()
        run: bundle exec rake spec/policies
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test

      - name: Run Routing Tests
        if: always()
        run: bundle exec rake spec/routing
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test

      - name: Run Views Tests
        if: always()
        run: bundle exec rake spec/views
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test

      - name: Run System Tests
        if: always()
        run: bundle exec rake spec/system
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test

