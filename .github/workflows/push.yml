name: build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  install-cache:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [14]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          yarn install --force --non-interactive
  test:
    runs-on: ubuntu-latest
    needs: install-cache
    timeout-minutes: 10

    services:
      db:
        image: postgres:10.13
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Standardize
        run: bundle exec standardrb

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:password@localhost:5432/doctors_test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          TZ: America/New_York
        run: |
          bin/rails db:create
          bin/rails db:schema:load
          bin/rake
